{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Entity Type Schema",
  "description": "A definition of the entity types that can be used in the Query Tool",
  "EntityType": {
    "type": "object",
    "properties": {
      "id": {
        "description": "A UUID identifying entity type",
        "type": "string"
      },
      "name": {
        "description": "The unique name of entity type like User, Loan, Item, etc.",
        "type": "string"
      },
      "labelAlias": {
        "description": "The identifier used for a localized label/name for this entity.",
        "type": "string"
      },
      "root": {
        "description": "Indicates if this is a root entity (true) or derived entity (false)",
        "type": "boolean"
      },
      "private": {
        "description": "This flag denotes whether the entity type is private or not. Private entity types cannot be accessed by users for querying.",
        "type": "boolean"
      },
      "subEntityTypeIds": {
        "description": "The IDs of the entity types that encompass a subset of the columns in this particular entity type.",
        "type": "array",
        "items": {
          "$ref": "common.json#/UUID"
        }
      },
      "customFieldEntityTypeId": {
        "description": "The IDs of the custom field entity type ",
        "type": "string"
      },
      "columns": {
        "type": "array",
        "items": {
          "$ref": "entityTypeColumn.json"
        }
      },
      "defaultSort": {
        "type": "array",
        "items": {
          "$ref": "entityTypeDefaultSort.json"
        }
      },
      "fromClause": {
        "description": "FROM clause containing all src views that need to be joined to query this entity type",
        "type": "string",
        "deprecated": true
      },
      "idView": {
        "description": "View from which the content IDs for this entity type are extracted",
        "type": "string"
      },
      "groupByFields": {
        "description": "Ordered list of fields used in the GROUP BY clause for this entity type",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "sourceView": {
        "description": "View from which the dynamic columns for this entity type are extracted",
        "type": "string"
      },
      "sourceViewExtractor": {
        "description": "Getting the base source of the custom field",
        "type": "string"
      },
      "sources": {
        "type": "array",
        "items": {
          "$ref": "entityTypeSource.json"
        }
      },
      "requiredPermissions": {
        "description": "List of permissions required to query this entity type",
        "type": "array",
        "items": {
          "type": "string"
        },
        "default": []
      }
    },
    "required": [
      "id",
      "name",
      "root",
      "private"
    ]
  }
}

